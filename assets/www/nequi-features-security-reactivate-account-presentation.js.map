{"version":3,"sources":["./libs/features/security/reactivate-account/src/config/reactive-account.config.ts","./libs/features/security/reactivate-account/src/presentation/pages/change-password/change-password.page.ts","./libs/features/security/reactivate-account/src/presentation/pages/change-password/change-password.page.html","./libs/features/security/reactivate-account/src/presentation/pages/change-password/change-password.config.ts","./libs/features/security/reactivate-account/src/presentation/index.ts","./libs/features/security/reactivate-account/src/presentation/middleware/make-account-reactivation.middleware.ts","./libs/features/security/reactivate-account/src/presentation/features-reactivate-account.module.ts","./libs/features/security/reactivate-account/src/presentation/features-reactivate-account-routing.module.ts","./libs/features/security/reactivate-account/src/presentation/features-reactivate-account.config.ts"],"names":[],"mappings":"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","file":"nequi-features-security-reactivate-account-presentation.js","sourcesContent":["import { Merge, ModuleConfigProvider } from '@nequi/features/commons';\n\nconst config = {\n  i18n: {\n    profileSecurityKey: 'profile-security',\n  },\n};\n\nexport const ReactiveAccountConfig = Object.freeze<Merge<ModuleConfigProvider, typeof config>>(\n  config\n);\n","import { Component, Injector } from '@angular/core';\nimport { FeatureBasePage } from '@nequi/features/commons/presentation';\nimport { ModuleConfigProvider, TranslateProvider } from '@nequi/features/commons/providers';\nimport { ChangePasswordService } from '@nequi/features/security/biometry/presentation/services';\nimport { ReactivateAccountInteractor } from '@nequi/features/security/reactivate-account/core';\nimport { LoadingService, ToastService } from '@nequi/ui';\n\nimport { ChangePasswordConfig } from './change-password.config';\n\n@Component({\n  selector: 'app-reactivation-account-change-password',\n  templateUrl: './change-password.page.html',\n})\nexport class ChangePasswordPage extends FeatureBasePage {\n  public config = ChangePasswordConfig;\n\n  constructor(\n    injector: Injector,\n    private reactivateAccountInteractor: ReactivateAccountInteractor,\n    private loadingService: LoadingService,\n    private translateProvider: TranslateProvider,\n    private toastService: ToastService,\n    private changePasswordService: ChangePasswordService,\n    private moduleConfigProvider: ModuleConfigProvider\n  ) {\n    super(injector);\n    this.translateProvider.loadModule(this.moduleConfigProvider.i18n.profileSecurityKey);\n  }\n\n  public async changePassword(newPassword: string) {\n    try {\n      await this.loadingService.show();\n\n      await this.reactivateAccountInteractor.changePassword(newPassword);\n\n      await this.loadingService.hide(true);\n\n      this.changePasswordService.emit(true);\n    } catch (error) {\n      await this.loadingService.hide(false);\n      await this.toastService.showError(error.message);\n      this.changePasswordService.emit(false);\n    }\n  }\n}\n","<nequi-confirm-pin\n  organismId=\"reactivate-account-change-password\"\n  [initialTitle]=\"config.i18n.initialTitle | translate\"\n  [initialDescription]=\"config.i18n.initialDescription | translate\"\n  [confirmTitle]=\"config.i18n.confirmTitle | translate\"\n  [confirmDescription]=\"config.i18n.confirmDescription | translate\"\n  [toastMessages]=\"config.i18n.toastMessages | translate\"\n  (passwordEntered)=\"changePassword($event)\"\n>\n</nequi-confirm-pin>\n","export const ChangePasswordConfig = Object.freeze({\n  i18n: {\n    initialTitle: 'sign-in.biometry-change-password.initial-title',\n    initialDescription: 'sign-in.biometry-change-password.initial-description',\n    confirmTitle: 'sign-in.biometry-change-password.confirm-title',\n    confirmDescription: 'sign-in.biometry-change-password.confirm-description',\n    toastMessages: 'sign-in.biometry-change-password.toast',\n    changePassSuccess: 'sign-in.change-password.success',\n  },\n});\n","export * from './features-reactivate-account.module';\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate } from '@angular/router';\nimport { AuthProvider, NavigatorProvider } from '@nequi/features/commons';\nimport {\n  BiometrySelection,\n  ChangePasswordService,\n  ChooseBiometryService\n} from '@nequi/features/security/biometry/presentation/services';\n\nimport { FeaturesReactivateAccountConfig } from '../features-reactivate-account.config';\n\n@Injectable()\nexport class MakeAccountReactivationMiddleware implements CanActivate {\n  constructor(\n    private chooseBiometryService: ChooseBiometryService,\n    private changePasswordService: ChangePasswordService,\n    private authProvider: AuthProvider,\n    private navigatorProvider: NavigatorProvider\n  ) {}\n\n  public async canActivate(_route: ActivatedRouteSnapshot): Promise<boolean> {\n    this.navigatorProvider.navigateForward(\n      FeaturesReactivateAccountConfig.routes.chooseBiometryUrl\n    );\n\n    this.chooseBiometryService.subscribe(async (response: BiometrySelection) => {\n      if (!response.isValid) {\n        return this.unsubscribeEvents();\n      }\n\n      this.navigatorProvider.navigateForward(\n        FeaturesReactivateAccountConfig.routes.changePasswordUrl\n      );\n    });\n\n    this.changePasswordService.subscribe(async (isSuccess: boolean) => {\n      if (isSuccess) {\n        this.logout();\n      }\n    });\n\n    return false;\n  }\n\n  private logout() {\n    this.authProvider.signOut();\n    this.unsubscribeEvents();\n  }\n\n  private unsubscribeEvents() {\n    this.chooseBiometryService?.unsubscribe();\n    this.changePasswordService?.unsubscribe();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { IonicModule } from '@ionic/angular';\nimport { ModuleConfigProvider } from '@nequi/features/commons';\nimport { FeaturesCommonsModule } from '@nequi/features/commons/presentation';\nimport {\n  ReactivateAccountInteractor,\n  ReactivateAccountRepository\n} from '@nequi/features/security/reactivate-account/core';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { ReactiveAccountConfig } from '../config/reactive-account.config';\nimport {\n  FeaturesReactivateAccountRoutingModule\n} from './features-reactivate-account-routing.module';\nimport {\n  MakeAccountReactivationMiddleware\n} from './middleware/make-account-reactivation.middleware';\nimport { ChangePasswordPage } from './pages/change-password/change-password.page';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    TranslateModule,\n    FeaturesCommonsModule,\n    FeaturesReactivateAccountRoutingModule,\n  ],\n  declarations: [ChangePasswordPage],\n  providers: [\n    MakeAccountReactivationMiddleware,\n    {\n      provide: ReactivateAccountInteractor,\n      deps: [ReactivateAccountRepository],\n      useClass: ReactivateAccountInteractor,\n    },\n    {\n      provide: ModuleConfigProvider,\n      useValue: ReactiveAccountConfig,\n    },\n  ],\n})\nexport class FeaturesReactivateAccountModule {}\n","import { NgModule, Type } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport {\n  MakeAccountReactivationMiddleware\n} from './middleware/make-account-reactivation.middleware';\nimport { ChangePasswordPage } from './pages/change-password/change-password.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: Type,\n    canActivate: [MakeAccountReactivationMiddleware],\n  },\n  {\n    path: 'change-password',\n    component: ChangePasswordPage,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class FeaturesReactivateAccountRoutingModule {}\n","export const FeaturesReactivateAccountConfig = Object.freeze({\n  routes: {\n    chooseBiometryUrl: '/auth/choose-biometry',\n    changePasswordUrl: '/auth/reactivate-account/change-password',\n  },\n});\n"],"sourceRoot":"webpack:///"}